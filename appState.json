{"EDITOR_STATE":{"allProjectFiles":{"11e84847-9230-4579-9afb-ce2748910d75":{"id":"11e84847-9230-4579-9afb-ce2748910d75","parent":null,"name":"TestRDS","type":"DIRECTORY","isDirectory":true,"children":["d495767a-da77-47e6-8dce-b494ba17d2b6","d428cf33-5352-4ef5-8af7-020ded0443aa","20c1978b-a13e-4ba5-a65b-23389c196c0b"],"isRemovable":false,"filePath":"TestRDS"},"d495767a-da77-47e6-8dce-b494ba17d2b6":{"id":"d495767a-da77-47e6-8dce-b494ba17d2b6","parent":"11e84847-9230-4579-9afb-ce2748910d75","name":"SignUp.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"TestRDS/SignUp.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL_AWS = require('slappforge-sdk-aws');\nconst rds = new SL_AWS.RDS(connectionManager);\nexports.handler = function (event, context, callback) {\n\n\tlet response;\n\tlet inserts = [event.email, event.password, event.lastName, event.firstName, event.address];\n\n\t// You can pass the existing connection to this function.\n\t// A new connection will be created if it's not present as the third param \n\t// You must always end/destroy the DB connection after it's used\n\trds.query({\n\t\tinstanceIdentifier: 'KTestInstance',\n\t\tquery: 'INSERT INTO users (Email, Password, LastName, FirstName, Address) VALUES (?, ?, ?, ?, ?);',\n\t\tinserts: inserts\n\t}, function (error, results, connection) {\n\t\tif (error) {\n\t\t\tresponse = error;\n\t\t\tthrow error;\n\t\t} else {\n\t\t\tresponse = \"Successfully added a new user with email\";\n\t\t\tconsole.log(results);\n\t\t}\n\t\tconnection.end();\n\t\tcallback(null, response);\n\t});\n\n}","triggers":[{"resourceName":"apigusEast1KTestSignuppost","config":{}}],"config":{"memory":128,"timeout":60,"runtime":"nodejs8.10"}},"d428cf33-5352-4ef5-8af7-020ded0443aa":{"id":"d428cf33-5352-4ef5-8af7-020ded0443aa","parent":"11e84847-9230-4579-9afb-ce2748910d75","name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"TestRDS/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n\n    this.dbConnections[\"KTestInstance\"] = {\n            host: process.env.EndPoint_rdsKTestInstance,\n            port: process.env.Port_rdsKTestInstance,\n            user: process.env.User_rdsKTestInstance,\n            password: process.env.Password_rdsKTestInstance,\n            database: \"KTest\",\n        };\n    };","triggers":[]},"20c1978b-a13e-4ba5-a65b-23389c196c0b":{"id":"20c1978b-a13e-4ba5-a65b-23389c196c0b","parent":"11e84847-9230-4579-9afb-ce2748910d75","name":"SignIn.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"TestRDS/SignIn.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL_AWS = require('slappforge-sdk-aws');\nconst rds = new SL_AWS.RDS(connectionManager);\nexports.handler = function (event, context, callback) {\n\n    let successfullyLoggedIn = false;\n\tlet inserts = [event.email, event.password];\n\t// Replace the query with the actual query\n\t// You can pass the existing connection to this function.\n\t// A new connection will be created if it's not present as the third param \n\t// You must always end the DB connection after it's used\n\trds.query({\n\t\tinstanceIdentifier: 'KTestInstance',\n\t\tquery: 'SELECT * FROM users WHERE Email = ? AND Password = ?',\n\t\tinserts: inserts\n\t}, function (error, results, connection) {\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t} else {\n\t\t\tsuccessfullyLoggedIn = results.length > 0;\n\t\t}\n\n\t\tconnection.end();\n\t\tcallback(null, successfullyLoggedIn);\n\t});\n}\n","triggers":[{"resourceName":"apigusEast1KTestSigninpost","config":{}}],"config":{"memory":128,"timeout":60,"runtime":"nodejs8.10"}}},"rootNode":"11e84847-9230-4579-9afb-ce2748910d75","openFiles":["d495767a-da77-47e6-8dce-b494ba17d2b6","20c1978b-a13e-4ba5-a65b-23389c196c0b","d428cf33-5352-4ef5-8af7-020ded0443aa"],"currentFileId":"d428cf33-5352-4ef5-8af7-020ded0443aa","resources":{"rds-KTestInstance":{"name":"rds-KTestInstance","type":"RDS","config":{"operation":0,"editMode":true,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.7.19","undefined":"5.7.19"},"rdsSetting":{"instanceIdentifier":"KTestInstance","masterUsername":"fisrtNlastN","masterPassword":"Kumudika#123"},"rdsDBOptions":{"dbName":"KTest","dbPort":"3306"},"rdsInstanceArn":"","Host":"","doesExist":false,"initializationQuery":"CREATE TABLE users ( \n UserId int NOT NULL AUTO_INCREMENT,\n Email varchar(255) NOT NULL UNIQUE,\n Password varchar(255) NOT NULL,\n LastName varchar(255),\n FirstName varchar(255),\n Address varchar(255),\n PRIMARY KEY (UserId)\n);","alreadyDeployed":false},"rdsInstanceResources":[],"mode":0,"projectRegion":"us-east-1","additionalFiles":[],"params":{"query":"INSERT INTO users (Email, Password, LastName, FirstName, Address)","inserts":""},"isGlobalEditMode":false,"enableInject":true,"isNewFromGlobal":false},"globallyEditable":true},"apigusEast1KTestSignuppost":{"name":"apigusEast1KTestSignuppost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"KTest","apiId":"ck3qwu9st3","endpointType":"EDGE","rootResourceId":"g4yihj87d3","existingResources":{"/SignUp":"24jr4n","/SignIn":"8kw603","/Test":"ak3naf","/":"g4yihj87d3","/Cal":"hcb72n","/testSQS":"l90fsl","/test1":"w0093j"},"resourceMode":0,"resourceName":"Signup","resourcePath":"/Signup","restMethod":"POST","proxyIntegration":false,"enableCORS":true,"stageMode":0,"stageName":"Prod"},"globallyEditable":true},"apigusEast1KTestSigninpost":{"name":"apigusEast1KTestSigninpost","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"KTest","apiId":"ck3qwu9st3","endpointType":"EDGE","rootResourceId":"g4yihj87d3","existingResources":{"/SignUp":"24jr4n","/SignIn":"8kw603","/Test":"ak3naf","/":"g4yihj87d3","/Cal":"hcb72n","/testSQS":"l90fsl","/test1":"w0093j"},"resourceMode":0,"resourceName":"Signin","resourcePath":"/Signin","restMethod":"POST","proxyIntegration":false,"enableCORS":true,"stageMode":0,"stageName":"Prod"},"globallyEditable":true}},"envVariables":[{"lambdaId":"all","varKey":"SIGMA_AWS_ACC_ID","varValue":null,"editable":false,"isEditable":false,"shouldPersist":false}],"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk-aws":{"name":"slappforge-sdk-aws","version":"0.0.4","notRemovable":false}}},"lambdaId":"d495767a-da77-47e6-8dce-b494ba17d2b6","additionalFiles":[]},"PROJECT_META":{"projectName":"TestRDS","projectDescription":"Simple Authenticator","projectVersion":"1.0.0","projectRegion":"us-east-1","lastSave":1526878670782},"VCS_STATE":{"provider":"GITHUB","repo":{"name":"TestRDS","url":"https://github.com/Kumudikatest/TestRDS"}}}